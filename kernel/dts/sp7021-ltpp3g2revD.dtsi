// SPDX-License-Identifier: GPL-2.0
/*
 * Device Tree Source (include) for Sunplus SP7021 SoC
 *                (LTPP3G2 Rev. D portion)
 *
 * Copyright (C) 2021 Sunplus Technology Co.
 */

/dts-v1/;

#include "sp7021-common.dtsi"

/ {
	model = "SP7021 LTPP3G2 Rev. D";

	chosen {
		bootargs = "console=ttyS0,115200 root=/dev/ram rw loglevel=8 earlyprintk";
		stdout-path = "serial0:115200n8";
	};

	memory@0 {
		device_type = "memory";
		reg = <0x00000000 0x20000000>; /* 512MB */
	};
};

&rtc {  charging-mode = <0x0E>;  };

&sp_display {
    ui_width = <1280>;
    ui_height = <720>;
    ui_format = <0x8>;
		/* 0x2 = 8bpp (ARGB)
		 * 0x4 = YUY2
		 * 0x8 = RGB565
		 * 0x9 = ARGB1555
		 * 0xa = RGBA4444
		 * 0xb = ARGB4444
		 * 0xd = RGBA8888
		   0xe = ARGB8888 */
};

&sp_spinor0 {  status = "disabled";  };

&spi_controller0 {
pinctrl-names = "default";
	pinctrl-0 = <&spim0_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;		
		status = "okay";
	};
};

&spi_controller1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spim1_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;
		status = "okay";
	};
};

&spi_controller2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spim2_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;		
		status = "okay";
	};
};

&spi_controller3 {
	pinctrl-names = "default";
	pinctrl-0 = <&spim3_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;		
		status = "okay";
	};
};


&sdio {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_sdio &pins_sdio_reset>;
 bus-width = <4>;
 max-frequency = <40000000>; /* up to 52 */
 // this: enable
 status = "okay";
 brcmf1: bcrmf@1 {
   reg = <1>;
   compatible = "android,bcmdhd_wlan";
   reset-gpios = <&pctl 83 GPIO_ACTIVE_LOW>;
 };
};

&sp_uphy0 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_vbus_usb0>;
 vbus-gpio = <&pctl 90 GPIO_ACTIVE_HIGH>;
};

&sp_uphy1 {
  pinctrl-names = "default";
  pinctrl-0 = <&pins_vbus_usb1>;
  vbus-gpio = <&pctl 91 GPIO_ACTIVE_HIGH>;
};

&l2sw {
 pinctrl-names = "default";
 pinctrl-0 = <&ethA_pins &eth0_pins &eth1_pins>;
 mode = < 1 >;
	/* 0 = daisy-chain mode
		* 1 = dual NIC mode
		* 2 = daisy-chain mode (disable SA learning) */
};

&mmc0 {
 pinctrl-names = "default";
 pinctrl-0 = <&emmc_mux>;
};

&mmc1 {
 pinctrl-names = "default";
 pinctrl-0 = <&mmc1_mux>;
 cd-gpios = <&pctl 0 GPIO_ACTIVE_LOW>;
};

&hdmitx {
 pinctrl-names = "default";
 pinctrl-0 = <&hdmi_A_tx1>;
};

&uart1 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_uart1>;
 status = "okay";
 // this: enable, pins_uart1
};

&uart2 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_uart2>;
 status = "okay";
 // this: enable, pins_uart2
};

&uart3 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_uart3>;
 status = "okay";
 // this: enable, pins_uart3
};

&uart4 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_btuart &pins_bt_reset>;
 status = "okay";
 // this: enable (bt) | enable (uart4), pins_uart4
};

&i2cm0 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm0_pins>;
	status = "okay";
};

&i2cm1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm1_pins>;
	status = "okay";
};

&i2cm2 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm2_pins>;
	status = "okay";
};

&i2cm3 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm3_pins>;
	status = "okay";
};



&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&buzzer0_pins>;
	status = "okay";
};

&pctl {
 /*** all non-device binded that you want to set mode ***/
 pinctrl-names = "default";
 pinctrl-0 = <&pins_iopp_nobinded &pins_gpio_nobinded &func_zero>;
 
 interrupt-parent = <&intc>;
 interrupts = <120 IRQ_TYPE_LEVEL_LOW>,
						 <121 IRQ_TYPE_LEVEL_LOW>,
						 <122 IRQ_TYPE_LEVEL_LOW>,
						 <123 IRQ_TYPE_LEVEL_LOW>,
						 <124 IRQ_TYPE_LEVEL_LOW>,
						 <125 IRQ_TYPE_LEVEL_LOW>,
						 <126 IRQ_TYPE_LEVEL_LOW>,
						 <127 IRQ_TYPE_LEVEL_LOW>;

 /* detouch any preset pins from this functions */
 func_zero: pinmux_func_zero-pins {
   sunplus,zerofunc = <
     MUXF_L2SW_LED_FLASH0
     MUXF_L2SW_LED_ON0
     MUXF_L2SW_LED_FLASH1
     MUXF_L2SW_LED_ON1
     MUXF_L2SW_P0_MAC_RMII_RXER
     MUXF_L2SW_P1_MAC_RMII_RXER
     GROP_SPI_FLASH
	 MUXF_UA1_TX
	 MUXF_UA1_RX
   >;
 };

 pins_iopp_nobinded: pinmux_iopp_nobinded-pins {
    sunplus,pins = <
    /* SPPCTL_IOPAD(97,SPPCTL_PCTL_G_IOPP,0,0) */
    >;
 };
 pins_gpio_nobinded: pinmux_gpio_nobinded-pins {
    sunplus,pins = <
      
    >;
 };

 pins_vbus_usb0: pinmux_vbus_usb0-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(90,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT)
    >;
 };
 pins_vbus_usb1: pinmux_vbus_usb1-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(91,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT)
    >;
 };

 leds_s0_def: pinmux_user_leds_s0_def-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(6,SPPCTL_PCTL_G_GPIO,MUXF_GPIO,SPPCTL_PCTL_L_INV)
      SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_INV)
    >;
 };
 leds_s0_slp: pinmux_user_leds_s0_slp-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(6,SPPCTL_PCTL_G_GPIO,0,0)
      SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };
 tpsleds_pins: pinmux_user_tpsleds-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(4,SPPCTL_PCTL_G_GPIO,0,0)
      SPPCTL_IOPAD(5,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };

 i2cm0_pins: i2cm0_pins {
    sunplus,pins = <>;};

 i2cm1_pins: i2cm1_pins {
    sunplus,pins = <>;
 };

 i2cm2_pins: i2cm2_pins {
    sunplus,pins = <>;
 }; 

 i2cm3_pins: i2cm3_pins {
    sunplus,pins = <>;
 }; 

 spim0_pins: spim0_pins {
    sunplus,pins = <>;
 };

 spim1_pins: spim1_pins {
    sunplus,pins = <>;
 };

 spim2_pins: spim2_pins {
    sunplus,pins = <>;
 };

 spim3_pins: spim3_pins {
    sunplus,pins = <>;
 };


 pins_uart1: pinmux_uart1-pins {
    sunplus,pins = <>;
 };

 pins_uart2: pinmux_uart2-pins {
    sunplus,pins = <>;
 };

 pins_uart3: pinmux_uart3-pins {
    sunplus,pins = <>;
 };

 pins_uart4: pinmux_uart4-pins {
    sunplus,pins = <>;
 };

 pins_btuart: pinmux_btuart-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(40,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RX,0)
      SPPCTL_IOPAD(41,SPPCTL_PCTL_G_PMUX,MUXF_UA4_TX,0)
      SPPCTL_IOPAD(56,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RTS,SPPCTL_PCTL_L_ONV)
      SPPCTL_IOPAD(49,SPPCTL_PCTL_G_PMUX,MUXF_UA4_CTS,0)
    >;
 };
 
 pins_bt_reset: pinmux_bt_reset-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(82,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };
 
 buzzer0_pins: pinmux_user_buzzer0-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(48,SPPCTL_PCTL_G_PMUX,MUXF_PWM0,0)
    >;
 };
 
 pins_i2ctps: pinmux_i2ctps-pins {
    sunplus,pins = <
      SPPCTL_IOPAD(1,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT|SPPCTL_PCTL_L_ONV|SPPCTL_PCTL_L_ODR)
      SPPCTL_IOPAD(2,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT|SPPCTL_PCTL_L_ONV|SPPCTL_PCTL_L_ODR)
    >;
 };
 
 hdmi_A_tx1: pinmux_hdmi_tx1-pins {
    function = "HDMI_TX";
    groups = "HDMI_TX1";
 };
 
 /* for all eth */
 ethA_pins: pinmux_ethA-pins {
  sunplus,pins = <
       SPPCTL_IOPAD(63,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_CLK_OUT,0)
       SPPCTL_IOPAD(71,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDC,0)
       SPPCTL_IOPAD(64,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDIO,0)
  >;
 };
 
 eth0_pins: pinmux_eth0-pins {
  sunplus,pins = <
       SPPCTL_IOPAD(62,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXEN,0)
       SPPCTL_IOPAD(61,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD0,0)
       SPPCTL_IOPAD(60,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD1,0)
       SPPCTL_IOPAD(59,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_CRSDV,0)
       SPPCTL_IOPAD(58,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD0,0)
       SPPCTL_IOPAD(57,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD1,0)
  >;
 };
 
 eth1_pins: pinmux_eth1-pins {
  sunplus,pins = <
       SPPCTL_IOPAD(55,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXEN,0)
       SPPCTL_IOPAD(54,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXD0,0)
       SPPCTL_IOPAD(53,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXD1,0)
       SPPCTL_IOPAD(52,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_CRSDV,0)
       SPPCTL_IOPAD(51,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_RXD0,0)
       SPPCTL_IOPAD(50,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_RXD1,0)
  >;
 };

 mmc1_mux: pinmux_mmc1-pins {
	function = "SD_CARD";
	groups = "SD_CARD";
	sunplus,pins = < SPPCTL_IOPAD(0,SPPCTL_PCTL_G_GPIO,0,0) >;
 };
 
 pins_sdio: pinmux_sdio-pins {
	sunplus,pins = <
		SPPCTL_IOPAD(44,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D1,0)
		SPPCTL_IOPAD(45,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D0,0)
		SPPCTL_IOPAD(46,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_CLK,0)
		SPPCTL_IOPAD(47,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_CMD,0)
		SPPCTL_IOPAD(42,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D3,0)
		SPPCTL_IOPAD(43,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D2,0) >;
 };
 
 pins_sdio_reset: pinmux_sdio_reset-pins {
	sunplus,pins = <
		/* additional reset pin for BRCM */
		SPPCTL_IOPAD(83,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OU1)
	>;
 };

};

/ {
	soc-B {
		tpsid {
        	compatible = "tpsid";
		    nvmem-cell-names = "mac_addr0";
		    nvmem-cells = <&mac_addr0>;
		};
		buzzer0 {
		    compatible = "pwm-beeper";
		    pinctrl-names = "default";
		    pinctrl-0 = <&buzzer0_pins>;
		    pwms = <&pwm 0 1000000 0>;
		};		
		i2c_tps: i2c-tps { /* eeprom */
		    compatible = "i2c-gpio";
		    i2c-gpio,scl-open-drain;
		    i2c-gpio,sda-open-drain;
		    i2c-gpio,delay-us = <1>;/* ~100 kHz */
		    #address-cells = <1>;
		    #size-cells = <0>;
		    pinctrl-names = "default";
		    pinctrl-0 = <&pins_i2ctps>;
		    gpios = <&pctl 2 GPIO_ACTIVE_HIGH     /* SDA */
			     	 &pctl 1 GPIO_ACTIVE_HIGH     /* SCL */
					>;
		    eeprom: eeprom@50 {
			compatible = "at,24c16";
			reg = <0x50>;
			pagesize = <16>;
		    };
		};
	};
};
