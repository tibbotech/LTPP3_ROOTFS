--- /root/SP7021/linux/kernel/drivers/nvmem/sp-ocotp.c	2023-02-17 08:04:12.000000000 +0000
+++ /root/LTPP3_ROOTFS/kernel/drivers/nvmem/sp-ocotp.c	2023-02-17 07:12:25.000000000 +0000
@@ -39,9 +39,6 @@
 enum base_type {
 	HB_GPIO,
 	OTPRX,
-#if defined(CONFIG_SOC_SP7350)
-	OTP_KEY,
-#endif
 	BASEMAX,
 };
 
@@ -76,18 +73,12 @@
 {
 	struct sp_hb_gpio_reg *hb_gpio_reg_ptr;
 	struct sp_otprx_reg *otprx_reg_ptr;
-#if defined(CONFIG_SOC_SP7350)
-	struct sp_otp_key_reg *otp_key_reg_ptr;
-#endif
 	unsigned int addr_data;
 	unsigned int byte_shift;
 	int ret = 0;
 
 	hb_gpio_reg_ptr = (struct sp_hb_gpio_reg *)(_otp->base[HB_GPIO]);
 	otprx_reg_ptr = (struct sp_otprx_reg *)(_otp->base[OTPRX]);
-#if defined(CONFIG_SOC_SP7350)
-	otp_key_reg_ptr = (struct sp_otp_key_reg *)(_otp->base[OTP_KEY]);
-#endif
 
 	addr_data = addr % (OTP_WORD_SIZE * OTP_WORDS_PER_BANK);
 	addr_data = addr_data / OTP_WORD_SIZE;
@@ -106,18 +97,8 @@
 	if (ret < 0)
 		return ret;
 
-#if defined(CONFIG_SOC_SP7350)
-	if (addr < (16 * 32)) {
-		*value = (readl(&hb_gpio_reg_ptr->hb_gpio_rgst_bus32_9 +
-				addr_data) >> (8 * byte_shift)) & 0xFF;
-	} else {
-		*value = (readl(&otp_key_reg_ptr->block0_addr +
-				addr_data) >> (8 * byte_shift)) & 0xFF;
-	}
-#else
 	*value = (readl(&hb_gpio_reg_ptr->hb_gpio_rgst_bus32_9 +
 				addr_data) >> (8 * byte_shift)) & 0xFF;
-#endif
 
 	return ret;
 }
@@ -231,6 +212,24 @@
 };
 #endif
 
+
+void sp_ocotp_read_serial_num(void* sp_otp_data){
+
+	extern unsigned long system_rev;
+	extern unsigned long system_serial_low;
+	extern unsigned long system_serial_high;
+
+	u16 rev = 0;
+	u8  uuid[20] = {0};
+	sp_ocotp_read(sp_otp_data, 29, &rev, sizeof(u8) * 2);
+	sp_ocotp_read(sp_otp_data, 32, uuid, sizeof(uuid));
+
+	system_rev=  ((rev & 0xFF) << 8)  | ((rev & 0xFF00) >> 8);
+	memcpy(&system_serial_low, uuid+8,sizeof(u8) * 4);
+	memcpy(&system_serial_high, uuid+12,sizeof(u8) * 4);
+
+}
+
 int sp_ocotp_probe(struct platform_device *pdev)
 {
 	const struct of_device_id *match;
@@ -271,13 +270,6 @@
 	if (IS_ERR(otp->base[OTPRX]))
 		return PTR_ERR(otp->base[OTPRX]);
 
-#if defined(CONFIG_SOC_SP7350)
-	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "otp_key");
-	otp->base[OTP_KEY] = devm_ioremap_resource(dev, res);
-	if (IS_ERR(otp->base[OTP_KEY]))
-		return PTR_ERR(otp->base[OTP_KEY]);
-#endif
-
 	otp->clk = devm_clk_get(&pdev->dev, NULL);
 	if (IS_ERR(otp->clk))
 		return PTR_ERR(otp->clk);
@@ -317,6 +309,8 @@
 		clk_get_rate(otp->clk),
 		QAC628_OTP_NUM_BANKS, OTP_WORDS_PER_BANK,
 		OTP_WORD_SIZE, QAC628_OTP_SIZE);
+	sp_ocotp_read_serial_num(otp);
+
 #elif defined(CONFIG_SOC_Q645)
 	if (otp->id == 0) {
 		dev_dbg(dev, "clk:%ld banks:%d x wpd:%d x wsize:%ld = %ld",
